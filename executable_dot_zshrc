# Amazon Q pre block. Keep at the top of this file.
[[ -f "${HOME}/.local/share/amazon-q/shell/zshrc.pre.zsh" ]] && builtin source "${HOME}/.local/share/amazon-q/shell/zshrc.pre.zsh"

export GITSTATUS_CACHE_DIR="$HOME/.local/var/cache/gitstatus"
# GITSTATUS_LOG_LEVEL=DEBUG
export DIRENV_LOG_FORMAT=""

# /etc/zshrc is sourced in interactive shells.  It
# should contain commands to set up aliases, functions,
# options, key bindings, etc.


###############
## Functions ##
###############

export DIRENV_LOG_FORMAT=""

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Source global definitions
if [ -f /etc/zshrc ]; then
    . /etc/zshrc
fi

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]; then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

source $(brew --prefix)/opt/chruby/share/chruby/chruby.sh
source $(brew --prefix)/opt/chruby/share/chruby/auto.sh
chruby ruby-3.4.1

if command -v brew >/dev/null 2>&1; then
    export LDFLAGS="-L$(brew --prefix)/lib"
    export CPPFLAGS="-I$(brew --prefix)/include"
    export PKG_CONFIG_PATH="$(brew --prefix)/lib/pkgconfig"
fi

# Preserve last working directory
# if [[ -f ~/.last_working_dir ]]; then
#     cd "$(cat ~/.last_working_dir)"
# fi

# Save current working directory on exit
mkdir -p $HOME/.logs
trap '{
    current_dir="$(pwd)"
    echo "Saving directory: $current_dir" >> $HOME/.logs/directory_save.log
    echo "$current_dir" > $HOME/.last_working_dir
}' EXIT

# Function to use uv venv as a layout for direnv in the .envrc file
# layout_uv() {
#     if [[ -d ".venv" ]]; then
#         VIRTUAL_ENV="$(pwd)/.venv"
#     fi

#     if [[ -z $VIRTUAL_ENV || ! -d $VIRTUAL_ENV ]]; then
#         log_status "No virtual environment exists. Executing \`uv venv\` to create one."
#         uv venv
#         VIRTUAL_ENV="$(pwd)/.venv"
#     fi

#     PATH_add "$VIRTUAL_ENV/bin"
#     export UV_ACTIVE=1  # or VENV_ACTIVE=1
#     export VIRTUAL_ENV
# }

# load Homebrew's shell completion # For Mac only
# if which brew &> /dev/null && [ -f "$(brew --prefix)/Library/Contributions/brew_bash_completion.sh" ]
# then
#   source "$(brew --prefix)/Library/Contributions/brew_bash_completion.sh"
# fi

# open man pages in Preview.app # For Mac only
# if [ -d "/Applications/Preview.app" ]
# then
#   pman () {
#     man -t "$@" |
#     ( which ps2pdf &> /dev/null && ps2pdf - - || cat) |
#     open -f -a /Applications/Preview.app
#   }
# fi


###############
## oh-my-zsh ##
###############

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  alias-finder
  # aws
  chezmoi
  colored-man-pages
  command-not-found
  direnv
  dnf
  # docker-compose
  # docker
#  dotenv # redundant with direnv
  fzf
  gh
  git-prompt
  git
  github
#  iterm2
#  macos
  man
  python
  # ssh
  # ssh-agent
  uv
  vscode
  zoxide
#  zsh-completions
  # zsh-interactive-cd
  # zsh-navigation-tools
#zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH" # I set this in .zshenv

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)" # I set this in .zshenv

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


#############
## Aliases ##
#############

alias ls="lsd -AFv --group-directories-first"
alias ll="lsd -AlFv --git --total-size --group-directories-first --header --date relative"
alias tree="lsd -AFv --tree --group-directories-first --depth=2"
alias cd="z"
alias path='echo $PATH | tr ":" "\n" | nl'
# alias python="python3" # Not necessary


#################
## Keybindings ##
#################


#######################
## Application Calls ##
#######################

# Run neofetch
neofetch

# Direnv configuration
# if (( $+commands[direnv] )); then
#   eval "$(direnv export zsh)"
# fi

# Direnv configuration
eval "$(direnv hook zsh)" # In recent versions of direnv, this hook might not be strictly necessary if:
    # You have the direnv binary installed
    # Direnv is in your PATH
    # Your shell is already configured to work with direnv
    # test with 'which direnv' and 'direnv status'

# To customize prompt, run `p10k configure` or edit $HOME/.p10k.zsh.
[[ ! -f $HOME/.p10k.zsh ]] || source $HOME/.p10k.zsh


# Doesn't seem to load
# https://www.gnu.org/software/coreutils/manual/html_node/dircolors-invocation.html
# Load dircolors if .dircolors file exists
# This is useful for customizing the colors used by `ls` and other commands.
# If you want to customize colors, create a .dircolors file in your home directory.
# d=.dircolors
# test -r $d && eval "$(dircolors $d)"

# Doesn't seem to load
# https://github.com/trapd00r/LS_COLORS
# Load custom ls colors if .config/lscolors.sh exists
# This is useful for customizing the colors used by `ls` and other commands.
# If you want to customize colors, create a .config/lscolors.sh file in your home directory.
# if [[ -f $HOME/.config/lscolors.sh ]]; then
#   # Ensure the file is sourced only if it exists
#   source $HOME/.config/lscolors.sh
# else
#   # Fallback to default colors if the file does not exist
#   echo "Warning: $HOME/.config/lscolors.sh not found. Using default ls colors."
# fi


# Amazon Q completion
# q completion zsh > $HOME/.zsh_completion
source $HOME/.zsh_completion

# Removes duplicate PATH variables in .zshrc
typeset -U PATH

# Amazon Q post block. Keep at the bottom of this file.
[[ -f "${HOME}/.local/share/amazon-q/shell/zshrc.post.zsh" ]] && builtin source "${HOME}/.local/share/amazon-q/shell/zshrc.post.zsh"
